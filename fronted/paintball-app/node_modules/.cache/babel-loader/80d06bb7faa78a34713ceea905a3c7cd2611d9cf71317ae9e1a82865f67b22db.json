{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sagil\\\\OneDrive\\\\\\u05DE\\u05E1\\u05DE\\u05DB\\u05D9\\u05DD\\\\paintball-application\\\\paintball-application\\\\fronted\\\\paintball-app\\\\src\\\\components\\\\emailSentPass.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { useAuth } from \"../context/auth.context\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SentEmail = () => {\n  _s();\n  const {\n    logIn,\n    user,\n    refreshUser\n  } = useAuth();\n  const TOKEN_KEY = \"token\";\n  const [errorApiRequest, setErrorApiRequest] = useState(\"\");\n  const [timer, setTimer] = useState(30); // Initial timer value in seconds\n  const [verificationCode, setVerificationCode] = useState(\"\");\n  const [isTimerActive, setIsTimerActive] = useState(true);\n  const navigate = useNavigate();\n  const location = useLocation();\n  console.log(location.state);\n  const email = location.state.email;\n  const phoneNumber = location.state.phoneNumber;\n  const startTimer = () => {\n    // Set a timer to decrement the timer value every second\n    const intervalId = setInterval(() => {\n      setTimer(prevTimer => {\n        if (prevTimer === 0) {\n          // Clear the interval when the timer reaches 0\n          clearInterval(intervalId);\n          setIsTimerActive(false);\n          // Set the timer as inactive\n          return 0; // Set timer to 0 and prevent it from restarting\n        } else {\n          return prevTimer - 1;\n        }\n      });\n    }, 2000);\n    return intervalId; // Return the intervalId for cleanup\n  };\n\n  useEffect(() => {\n    if (isTimerActive) {\n      const intervalId = startTimer();\n\n      // Cleanup: Reset the timer and clear the interval when the component unmounts\n      return () => {\n        clearInterval(intervalId);\n      };\n    }\n  }, [isTimerActive]);\n  const handleVerificationCodeChange = e => {\n    const inputCode = e.target.value;\n    setVerificationCode(inputCode);\n  };\n  const handleVerificationCodeSubmit = async () => {\n    // Check if the entered code is valid\n    const isValidCode = verificationCode.length === 4;\n    if (isValidCode && isTimerActive) {\n      const response = await fetch(\"http://localhost:3003/reset-password/sent-email\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          verificationCode\n        })\n      });\n      const {\n        user,\n        userToken\n      } = await response.json();\n      localStorage.setItem(TOKEN_KEY, userToken);\n      localStorage.getItem(TOKEN_KEY);\n      refreshUser();\n      // Navigate to the \"Change Password\" component\n      navigate(`/users/change-password/via-email-code/${user._id}`, {\n        state: {\n          user\n        }\n      });\n      setIsTimerActive(true); // Set the timer as active\n    } else {\n      // Handle invalid code (show an error message or perform other actions)\n      console.error(\"Invalid verification code\");\n    }\n  };\n  const sendAnotherCode = () => {\n    const fetchForCode = async () => {\n      try {\n        // Add your backend API endpoint for password reset\n        const response = await fetch(\"http://localhost:3003/reset-password\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email,\n            phoneNumber\n          })\n        });\n        setTimer(100);\n        setIsTimerActive(true);\n        const data = await response.json();\n        if (response.ok) {\n          console.log(\"message\");\n        } else {}\n      } catch (error) {\n        console.error(\"Error resetting password:\", error.message);\n      }\n    };\n    fetchForCode(); // Immediately send a new code\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enter Verification Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter the 4-digit verification code sent to your email.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form-control w-50 m-auto\",\n      type: \"text\",\n      value: verificationCode,\n      onChange: handleVerificationCodeChange,\n      maxLength: 4\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleVerificationCodeSubmit,\n      children: \"Submit Verification Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-danger\",\n        children: errorApiRequest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Time remaining: \", Math.floor(timer / 60), \":\", timer % 60]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), timer === 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: sendAnotherCode,\n        children: \"Send New Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(SentEmail, \"iiRFxxoMNLdQa1i/UmWqwsAaZGQ=\", false, function () {\n  return [useAuth, useNavigate, useLocation];\n});\n_c = SentEmail;\nexport default SentEmail;\nvar _c;\n$RefreshReg$(_c, \"SentEmail\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useLocation","useAuth","toast","SentEmail","logIn","user","refreshUser","TOKEN_KEY","errorApiRequest","setErrorApiRequest","timer","setTimer","verificationCode","setVerificationCode","isTimerActive","setIsTimerActive","navigate","location","console","log","state","email","phoneNumber","startTimer","intervalId","setInterval","prevTimer","clearInterval","handleVerificationCodeChange","e","inputCode","target","value","handleVerificationCodeSubmit","isValidCode","length","response","fetch","method","headers","body","JSON","stringify","userToken","json","localStorage","setItem","getItem","_id","error","sendAnotherCode","fetchForCode","data","ok","message","Math","floor"],"sources":["C:/Users/sagil/OneDrive/מסמכים/paintball-application/paintball-application/fronted/paintball-app/src/components/emailSentPass.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useAuth } from \"../context/auth.context\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst SentEmail = () => {\r\n  const { logIn, user, refreshUser } = useAuth();\r\n  const TOKEN_KEY = \"token\";\r\n  const [errorApiRequest, setErrorApiRequest] = useState(\"\");\r\n  const [timer, setTimer] = useState(30); // Initial timer value in seconds\r\n  const [verificationCode, setVerificationCode] = useState(\"\");\r\n  const [isTimerActive, setIsTimerActive] = useState(true);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  console.log(location.state);\r\n  const email = location.state.email;\r\n  const phoneNumber = location.state.phoneNumber;\r\n  const startTimer = () => {\r\n    // Set a timer to decrement the timer value every second\r\n    const intervalId = setInterval(() => {\r\n      setTimer((prevTimer) => {\r\n        if (prevTimer === 0) {\r\n          // Clear the interval when the timer reaches 0\r\n          clearInterval(intervalId);\r\n          setIsTimerActive(false);\r\n          // Set the timer as inactive\r\n          return 0; // Set timer to 0 and prevent it from restarting\r\n        } else {\r\n          return prevTimer - 1;\r\n        }\r\n      });\r\n    }, 2000);\r\n\r\n    return intervalId; // Return the intervalId for cleanup\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isTimerActive) {\r\n      const intervalId = startTimer();\r\n\r\n      // Cleanup: Reset the timer and clear the interval when the component unmounts\r\n      return () => {\r\n        clearInterval(intervalId);\r\n      };\r\n    }\r\n  }, [isTimerActive]);\r\n\r\n  const handleVerificationCodeChange = (e) => {\r\n    const inputCode = e.target.value;\r\n    setVerificationCode(inputCode);\r\n  };\r\n\r\n  const handleVerificationCodeSubmit = async () => {\r\n    // Check if the entered code is valid\r\n    const isValidCode = verificationCode.length === 4;\r\n\r\n    if (isValidCode && isTimerActive) {\r\n      const response = await fetch(\r\n        \"http://localhost:3003/reset-password/sent-email\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ verificationCode }),\r\n        }\r\n      );\r\n      const { user, userToken } = await response.json();\r\n      localStorage.setItem(TOKEN_KEY, userToken);\r\n      localStorage.getItem(TOKEN_KEY);\r\n      refreshUser();\r\n      // Navigate to the \"Change Password\" component\r\n      navigate(`/users/change-password/via-email-code/${user._id}`, {\r\n        state: { user },\r\n      });\r\n      setIsTimerActive(true); // Set the timer as active\r\n    } else {\r\n      // Handle invalid code (show an error message or perform other actions)\r\n      console.error(\"Invalid verification code\");\r\n    }\r\n  };\r\n\r\n  const sendAnotherCode = () => {\r\n    const fetchForCode = async () => {\r\n      try {\r\n        // Add your backend API endpoint for password reset\r\n        const response = await fetch(\"http://localhost:3003/reset-password\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ email, phoneNumber }),\r\n        });\r\n        setTimer(100);\r\n        setIsTimerActive(true);\r\n        const data = await response.json();\r\n\r\n        if (response.ok) {\r\n          console.log(\"message\");\r\n        } else {\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error resetting password:\", error.message);\r\n      }\r\n    };\r\n\r\n    fetchForCode(); // Immediately send a new code\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-5\">\r\n      <h2>Enter Verification Code</h2>\r\n      <p>Please enter the 4-digit verification code sent to your email.</p>\r\n\r\n      <input\r\n                  className=\"form-control w-50 m-auto\"\r\n\r\n        type=\"text\"\r\n        value={verificationCode}\r\n        onChange={handleVerificationCodeChange}\r\n        maxLength={4}\r\n      />\r\n\r\n      <button onClick={handleVerificationCodeSubmit}>\r\n        Submit Verification Code\r\n      </button>\r\n\r\n      <div>\r\n        <p className=\"text-danger\">{errorApiRequest}</p>\r\n      </div>\r\n\r\n      <div>\r\n        <p>\r\n          Time remaining: {Math.floor(timer / 60)}:{timer % 60}\r\n        </p>\r\n        {timer === 0 ? (\r\n          <button className=\"btn btn-primary\" onClick={sendAnotherCode}>\r\n            Send New Code\r\n          </button>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SentEmail;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}