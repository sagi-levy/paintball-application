{"ast":null,"code":"import httpRequestDetails from \"./basicIrlAxios\";\nexport function createActivityCard(card) {\n  return httpRequestDetails.post(\"/api/tasks\", card);\n}\nexport function getAll() {\n  return httpRequestDetails.get(\"/api/tasks\");\n}\nexport function deleteActivityCard(id) {\n  return httpRequestDetails.delete(`/cards/delete-activity-cards/${id}`);\n}\nexport function updateActivityCard(id, activityCard) {\n  return httpRequestDetails.put(`/cards/edit-activity-cards/${id}`, activityCard);\n}\nexport function updateActivityCardToPaidTrue(id, activityCard) {\n  return httpRequestDetails.put(`/cards/payment/${id}`, activityCard, {\n    method: \"PUT\",\n    body: JSON.stringify(activityCard)\n  });\n}\nexport const fetchTasksTimes = async () => {\n  try {\n    const response = await fetch(\"http://localhost:3003/api/tasks\", user ? {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": localStorage.token\n        // Add other headers as needed\n      }\n    } : null);\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch tasks\");\n    }\n    const data = await response.json();\n    user ? setTasksTimes(data.tasks.filter(activity => activity.activityTime && activity.activityDate).map(_ref => {\n      let {\n        activityTime,\n        activityDate\n      } = _ref;\n      return {\n        activityTime,\n        activityDate\n      };\n    })) : setTasksTimes(data.filter(activity => activity.activityTime && activity.activityDate).map(_ref2 => {\n      let {\n        activityTime,\n        activityDate\n      } = _ref2;\n      return {\n        activityTime,\n        activityDate\n      };\n    })); // when there is user (token) data gives me also user and also tasks in an object\n  } catch (error) {\n    console.error(error.message);\n  }\n};\nexport function getSpecificActivityCard(id) {\n  return httpRequestDetails.get(`/cards/my-activity-cards/${id}`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-auth-token\": localStorage.token\n      // Add other headers as needed\n    }\n  });\n}\n\nconst acitivityCardServices = {\n  createActivityCard,\n  getAll,\n  deleteActivityCard,\n  updateActivityCard,\n  getSpecificActivityCard,\n  fetchTasksTimes\n};\nexport default acitivityCardServices;","map":{"version":3,"names":["httpRequestDetails","createActivityCard","card","post","getAll","get","deleteActivityCard","id","delete","updateActivityCard","activityCard","put","updateActivityCardToPaidTrue","method","body","JSON","stringify","fetchTasksTimes","response","fetch","user","headers","localStorage","token","ok","Error","data","json","setTasksTimes","tasks","filter","activity","activityTime","activityDate","map","error","console","message","getSpecificActivityCard","acitivityCardServices"],"sources":["C:/Users/sagil/OneDrive/מסמכים/paintball-application/paintball-application/fronted/paintball-app/src/services/cardsServices.js"],"sourcesContent":["import httpRequestDetails from \"./basicIrlAxios\";\r\nexport function createActivityCard(card) {\r\n  return httpRequestDetails.post(\"/api/tasks\", card);\r\n}\r\nexport function getAll() {\r\n  return httpRequestDetails.get(\"/api/tasks\");\r\n}\r\nexport function deleteActivityCard(id) {\r\n  return httpRequestDetails.delete(`/cards/delete-activity-cards/${id}`);\r\n}\r\nexport function updateActivityCard(id, activityCard) {\r\n  return httpRequestDetails.put(\r\n    `/cards/edit-activity-cards/${id}`,\r\n    activityCard\r\n  );\r\n}\r\nexport function updateActivityCardToPaidTrue(id, activityCard) {\r\n  return httpRequestDetails.put(`/cards/payment/${id}`, activityCard, {\r\n    method: \"PUT\",\r\n    body: JSON.stringify(activityCard),\r\n  });\r\n}\r\nexport const fetchTasksTimes = async () => {\r\n  try {\r\n    const response = await fetch(\r\n      \"http://localhost:3003/api/tasks\",\r\n      user\r\n        ? {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              \"x-auth-token\": localStorage.token,\r\n              // Add other headers as needed\r\n            },\r\n          }\r\n        : null\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error(\"Failed to fetch tasks\");\r\n    }\r\n\r\n    const data = await response.json();\r\n\r\n    user\r\n      ? setTasksTimes(\r\n          data.tasks\r\n            .filter(\r\n              (activity) => activity.activityTime && activity.activityDate\r\n            )\r\n            .map(({ activityTime, activityDate }) => ({\r\n              activityTime,\r\n              activityDate,\r\n            }))\r\n        )\r\n      : setTasksTimes(\r\n          data\r\n            .filter(\r\n              (activity) => activity.activityTime && activity.activityDate\r\n            )\r\n            .map(({ activityTime, activityDate }) => ({\r\n              activityTime,\r\n              activityDate,\r\n            }))\r\n        ); // when there is user (token) data gives me also user and also tasks in an object\r\n  } catch (error) {\r\n    console.error(error.message);\r\n  }\r\n};\r\nexport function getSpecificActivityCard(id) {\r\n  return httpRequestDetails.get(`/cards/my-activity-cards/${id}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": localStorage.token,\r\n      // Add other headers as needed\r\n    },\r\n  });\r\n}\r\nconst acitivityCardServices = {\r\n  createActivityCard,\r\n  getAll,\r\n  deleteActivityCard,\r\n  updateActivityCard,\r\n  getSpecificActivityCard,fetchTasksTimes\r\n};\r\nexport default acitivityCardServices;\r\n"],"mappings":"AAAA,OAAOA,kBAAkB,MAAM,iBAAiB;AAChD,OAAO,SAASC,kBAAkB,CAACC,IAAI,EAAE;EACvC,OAAOF,kBAAkB,CAACG,IAAI,CAAC,YAAY,EAAED,IAAI,CAAC;AACpD;AACA,OAAO,SAASE,MAAM,GAAG;EACvB,OAAOJ,kBAAkB,CAACK,GAAG,CAAC,YAAY,CAAC;AAC7C;AACA,OAAO,SAASC,kBAAkB,CAACC,EAAE,EAAE;EACrC,OAAOP,kBAAkB,CAACQ,MAAM,CAAE,gCAA+BD,EAAG,EAAC,CAAC;AACxE;AACA,OAAO,SAASE,kBAAkB,CAACF,EAAE,EAAEG,YAAY,EAAE;EACnD,OAAOV,kBAAkB,CAACW,GAAG,CAC1B,8BAA6BJ,EAAG,EAAC,EAClCG,YAAY,CACb;AACH;AACA,OAAO,SAASE,4BAA4B,CAACL,EAAE,EAAEG,YAAY,EAAE;EAC7D,OAAOV,kBAAkB,CAACW,GAAG,CAAE,kBAAiBJ,EAAG,EAAC,EAAEG,YAAY,EAAE;IAClEG,MAAM,EAAE,KAAK;IACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,YAAY;EACnC,CAAC,CAAC;AACJ;AACA,OAAO,MAAMO,eAAe,GAAG,YAAY;EACzC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,iCAAiC,EACjCC,IAAI,GACA;MACEP,MAAM,EAAE,KAAK;MACbQ,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,cAAc,EAAEC,YAAY,CAACC;QAC7B;MACF;IACF,CAAC,GACD,IAAI,CACT;IACD,IAAI,CAACL,QAAQ,CAACM,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1C;IAEA,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,EAAE;IAElCP,IAAI,GACAQ,aAAa,CACXF,IAAI,CAACG,KAAK,CACPC,MAAM,CACJC,QAAQ,IAAKA,QAAQ,CAACC,YAAY,IAAID,QAAQ,CAACE,YAAY,CAC7D,CACAC,GAAG,CAAC;MAAA,IAAC;QAAEF,YAAY;QAAEC;MAAa,CAAC;MAAA,OAAM;QACxCD,YAAY;QACZC;MACF,CAAC;IAAA,CAAC,CAAC,CACN,GACDL,aAAa,CACXF,IAAI,CACDI,MAAM,CACJC,QAAQ,IAAKA,QAAQ,CAACC,YAAY,IAAID,QAAQ,CAACE,YAAY,CAC7D,CACAC,GAAG,CAAC;MAAA,IAAC;QAAEF,YAAY;QAAEC;MAAa,CAAC;MAAA,OAAM;QACxCD,YAAY;QACZC;MACF,CAAC;IAAA,CAAC,CAAC,CACN,CAAC,CAAC;EACT,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAACE,OAAO,CAAC;EAC9B;AACF,CAAC;AACD,OAAO,SAASC,uBAAuB,CAAC/B,EAAE,EAAE;EAC1C,OAAOP,kBAAkB,CAACK,GAAG,CAAE,4BAA2BE,EAAG,EAAC,EAAE;IAC9DM,MAAM,EAAE,KAAK;IACbQ,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,cAAc,EAAEC,YAAY,CAACC;MAC7B;IACF;EACF,CAAC,CAAC;AACJ;;AACA,MAAMgB,qBAAqB,GAAG;EAC5BtC,kBAAkB;EAClBG,MAAM;EACNE,kBAAkB;EAClBG,kBAAkB;EAClB6B,uBAAuB;EAACrB;AAC1B,CAAC;AACD,eAAesB,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}