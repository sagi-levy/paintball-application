{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sagil\\\\OneDrive\\\\\\u05DE\\u05E1\\u05DE\\u05DB\\u05D9\\u05DD\\\\paintball-application\\\\paintball-application\\\\fronted\\\\paintball-app\\\\src\\\\components\\\\changePassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { changeUserPassword } from \"../services/userApiServices\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Input from \"../components/common/input\";\nimport Joi from \"joi\";\nimport FormikUsingJoi from \"../utils/formikUsingJoi\";\nimport { useFormik } from \"formik\";\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChangePassword = () => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const user = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.user) || null;\n  console.log(user);\n  const {\n    id\n  } = useParams();\n  console.log(id);\n  const navigate = useNavigate();\n  const [errorApiRequest, setErrorApiRequest] = useState(\"\");\n  const form = useFormik({\n    initialValues: {\n      oldPassword: \"\",\n      newPassword: \"\",\n      confirmNewPassword: \"\"\n    },\n    validateOnMount: true,\n    validate: FormikUsingJoi({\n      oldPassword: Joi.string().min(2).max(255).required(),\n      newPassword: Joi.string().max(10).min(4).required(),\n      confirmNewPassword: Joi.string().required().min(5).max(1000).valid(Joi.ref(\"newPassword\")).messages({\n        \"any.only\": \"Confirm password must match the new password\"\n      })\n    }),\n    async onSubmit(formData) {\n      try {\n        // Validate form data (e.g., ensure newPassword and confirmNewPassword match)\n        const response = await fetch(`http://localhost:3003/users/change-password/${id}`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-auth-token\": localStorage.token\n            // Add other headers as needed\n          },\n\n          body: JSON.stringify(formData)\n        });\n        if (!response.ok) {\n          const data = await response;\n          console.log(data);\n          setErrorApiRequest(data.statusText);\n        }\n      } catch (error) {\n        console.error(error);\n        setErrorApiRequest(\"Internal server error\");\n      }\n      toast.success(`password changed`, {\n        autoClose: 2000,\n        style: {\n          background: \"black\",\n          color: \"white\",\n          borderRadius: \"8px\",\n          boxShadow: \"0 0 10px rgba(0, 0, 0, 0.5)\"\n        }\n      });\n      navigate(\"/calendar\");\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Change Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: form.handleSubmit,\n      children: [\" \", errorApiRequest && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: errorApiRequest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ...form.getFieldProps(\"oldPassword\"),\n        type: \"password\",\n        name: \"oldPassword\",\n        id: \"oldPassword\",\n        error: form.touched.oldPassword && form.errors.oldPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ...form.getFieldProps(\"newPassword\"),\n        type: \"password\",\n        name: \"newPassword\",\n        id: \"newPassword\",\n        error: form.touched.newPassword && form.errors.newPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ...form.getFieldProps(\"confirmNewPassword\"),\n        type: \"password\",\n        name: \"confirmNewPassword\",\n        id: \"confirmNewPassword\",\n        error: form.touched.confirmNewPassword && form.errors.confirmNewPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(ChangePassword, \"PPJ3GJ5IkuXNqG7rDxEEAmaL2Bk=\", false, function () {\n  return [useLocation, useParams, useNavigate, useFormik];\n});\n_c = ChangePassword;\nexport default ChangePassword;\nvar _c;\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"names":["React","useState","changeUserPassword","useNavigate","useParams","Input","Joi","FormikUsingJoi","useFormik","useLocation","ChangePassword","location","user","state","console","log","id","navigate","errorApiRequest","setErrorApiRequest","form","initialValues","oldPassword","newPassword","confirmNewPassword","validateOnMount","validate","string","min","max","required","valid","ref","messages","onSubmit","formData","response","fetch","method","headers","localStorage","token","body","JSON","stringify","ok","data","statusText","error","toast","success","autoClose","style","background","color","borderRadius","boxShadow","handleSubmit","getFieldProps","touched","errors"],"sources":["C:/Users/sagil/OneDrive/מסמכים/paintball-application/paintball-application/fronted/paintball-app/src/components/changePassword.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { changeUserPassword } from \"../services/userApiServices\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport Input from \"../components/common/input\";\r\nimport Joi from \"joi\";\r\nimport FormikUsingJoi from \"../utils/formikUsingJoi\";\r\nimport { useFormik } from \"formik\";\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst ChangePassword = () => {\r\n   const location = useLocation();\r\n  const user = location.state?.user || null;\r\n  console.log(user)\r\n  const { id } = useParams();\r\n  console.log(id);\r\n  const navigate = useNavigate();\r\n\r\n  const [errorApiRequest, setErrorApiRequest] = useState(\"\");\r\n\r\n  const form = useFormik({\r\n    initialValues: { oldPassword: \"\", newPassword: \"\", confirmNewPassword: \"\" },\r\n    validateOnMount: true,\r\n    validate: FormikUsingJoi({\r\n      oldPassword: Joi.string().min(2).max(255).required(),\r\n      newPassword: Joi.string().max(10).min(4).required(),\r\n      confirmNewPassword: Joi.string()\r\n        .required()\r\n        .min(5)\r\n        .max(1000)\r\n        .valid(Joi.ref(\"newPassword\"))\r\n        .messages({\r\n          \"any.only\": \"Confirm password must match the new password\",\r\n        }),\r\n    }),\r\n\r\n    async onSubmit(formData) {\r\n      try {\r\n        // Validate form data (e.g., ensure newPassword and confirmNewPassword match)\r\n        const response = await fetch(\r\n          `http://localhost:3003/users/change-password/${id}`,\r\n          {\r\n            method: \"PUT\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              \"x-auth-token\": localStorage.token,\r\n              // Add other headers as needed\r\n            },\r\n            body: JSON.stringify(formData),\r\n          }\r\n        );\r\n        if (!response.ok) {\r\n          const data = await response;\r\n          console.log(data);\r\n          setErrorApiRequest(data.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        setErrorApiRequest(\"Internal server error\");\r\n      }\r\n      toast.success(`password changed`, {\r\n        autoClose: 2000,\r\n        style: {\r\n          background: \"black\",\r\n          color: \"white\",\r\n          borderRadius: \"8px\",\r\n          boxShadow: \"0 0 10px rgba(0, 0, 0, 0.5)\",\r\n        },\r\n      });\r\n      navigate(\"/calendar\");\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h2>Change Password</h2>\r\n\r\n      <form onSubmit={form.handleSubmit}>\r\n        {\" \"}\r\n        {errorApiRequest && (\r\n          <div className=\"alert alert-danger\">{errorApiRequest}</div>\r\n        )}\r\n        <Input\r\n          {...form.getFieldProps(\"oldPassword\")}\r\n          type=\"password\"\r\n          name=\"oldPassword\"\r\n          id=\"oldPassword\"\r\n          error={form.touched.oldPassword && form.errors.oldPassword}\r\n        />\r\n        <Input\r\n          {...form.getFieldProps(\"newPassword\")}\r\n          type=\"password\"\r\n          name=\"newPassword\"\r\n          id=\"newPassword\"\r\n          error={form.touched.newPassword && form.errors.newPassword}\r\n        />\r\n        <Input\r\n          {...form.getFieldProps(\"confirmNewPassword\")}\r\n          type=\"password\"\r\n          name=\"confirmNewPassword\"\r\n          id=\"confirmNewPassword\"\r\n          error={\r\n            form.touched.confirmNewPassword && form.errors.confirmNewPassword\r\n          }\r\n        />{\" \"}\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          confirm\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}