{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { changeUserPassword } from \"../services/userApiServices\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Input from \"../components/common/input\";\nimport Joi from \"joi\";\nimport FormikUsingJoi from \"../utils/formikUsingJoi\";\nimport { useFormik } from \"formik\";\nimport { useLocation } from 'react-router-dom';\nconst ChangePassword = () => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const user = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.user) || null;\n  console.log(user);\n  // const { id } = useParams();\n  // console.log(id);\n  // const navigate = useNavigate();\n\n  // const [errorApiRequest, setErrorApiRequest] = useState(\"\");\n\n  // const form = useFormik({\n  //   initialValues: { oldPassword: \"\", newPassword: \"\", confirmNewPassword: \"\" },\n  //   validateOnMount: true,\n  //   validate: FormikUsingJoi({\n  //     oldPassword: Joi.string().min(2).max(255).required(),\n  //     newPassword: Joi.string().max(10).min(4).required(),\n  //     confirmNewPassword: Joi.string()\n  //       .required()\n  //       .min(5)\n  //       .max(1000)\n  //       .valid(Joi.ref(\"newPassword\"))\n  //       .messages({\n  //         \"any.only\": \"Confirm password must match the new password\",\n  //       }),\n  //   }),\n\n  //   async onSubmit(formData) {\n  //     try {\n  //       // Validate form data (e.g., ensure newPassword and confirmNewPassword match)\n  //       const response = await fetch(\n  //         `http://localhost:3003/users/change-password/${id}`,\n  //         {\n  //           method: \"PUT\",\n  //           headers: {\n  //             \"Content-Type\": \"application/json\",\n  //             \"x-auth-token\": localStorage.token,\n  //             // Add other headers as needed\n  //           },\n  //           body: JSON.stringify(formData),\n  //         }\n  //       );\n  //       if (!response.ok) {\n  //         const data = await response;\n  //         console.log(data);\n  //         setErrorApiRequest(data.statusText);\n  //       }\n  //     } catch (error) {\n  //       console.error(error);\n  //       setErrorApiRequest(\"Internal server error\");\n  //     }\n  //     navigate(\"/calendar\");\n  //   },\n  // });\n\n  // return (\n  //   <div>\n  //     <h2>Change Password</h2>\n\n  //     <form onSubmit={form.handleSubmit}>\n  //       {\" \"}\n  //       {errorApiRequest && (\n  //         <div className=\"alert alert-danger\">{errorApiRequest}</div>\n  //       )}\n  //       <Input\n  //         {...form.getFieldProps(\"oldPassword\")}\n  //         type=\"password\"\n  //         name=\"oldPassword\"\n  //         id=\"oldPassword\"\n  //         error={form.touched.oldPassword && form.errors.oldPassword}\n  //       />\n  //       <Input\n  //         {...form.getFieldProps(\"newPassword\")}\n  //         type=\"password\"\n  //         name=\"newPassword\"\n  //         id=\"newPassword\"\n  //         error={form.touched.newPassword && form.errors.newPassword}\n  //       />\n  //       <Input\n  //         {...form.getFieldProps(\"confirmNewPassword\")}\n  //         type=\"password\"\n  //         name=\"confirmNewPassword\"\n  //         id=\"confirmNewPassword\"\n  //         error={\n  //           form.touched.confirmNewPassword && form.errors.confirmNewPassword\n  //         }\n  //       />{\" \"}\n  //       <button type=\"submit\" className=\"btn btn-primary\">\n  //         confirm\n  //       </button>\n  //     </form>\n  //   </div>\n  // );\n};\n_s(ChangePassword, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = ChangePassword;\nexport default ChangePassword;\nvar _c;\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"names":["React","useState","changeUserPassword","useNavigate","useParams","Input","Joi","FormikUsingJoi","useFormik","useLocation","ChangePassword","location","user","state","console","log"],"sources":["C:/Users/sagil/OneDrive/מסמכים/paintball-application/paintball-application/fronted/paintball-app/src/components/changePassword.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { changeUserPassword } from \"../services/userApiServices\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport Input from \"../components/common/input\";\r\nimport Joi from \"joi\";\r\nimport FormikUsingJoi from \"../utils/formikUsingJoi\";\r\nimport { useFormik } from \"formik\";\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst ChangePassword = () => {\r\n   const location = useLocation();\r\n  const user = location.state?.user || null;\r\n  console.log(user)\r\n  // const { id } = useParams();\r\n  // console.log(id);\r\n  // const navigate = useNavigate();\r\n\r\n  // const [errorApiRequest, setErrorApiRequest] = useState(\"\");\r\n\r\n  // const form = useFormik({\r\n  //   initialValues: { oldPassword: \"\", newPassword: \"\", confirmNewPassword: \"\" },\r\n  //   validateOnMount: true,\r\n  //   validate: FormikUsingJoi({\r\n  //     oldPassword: Joi.string().min(2).max(255).required(),\r\n  //     newPassword: Joi.string().max(10).min(4).required(),\r\n  //     confirmNewPassword: Joi.string()\r\n  //       .required()\r\n  //       .min(5)\r\n  //       .max(1000)\r\n  //       .valid(Joi.ref(\"newPassword\"))\r\n  //       .messages({\r\n  //         \"any.only\": \"Confirm password must match the new password\",\r\n  //       }),\r\n  //   }),\r\n\r\n  //   async onSubmit(formData) {\r\n  //     try {\r\n  //       // Validate form data (e.g., ensure newPassword and confirmNewPassword match)\r\n  //       const response = await fetch(\r\n  //         `http://localhost:3003/users/change-password/${id}`,\r\n  //         {\r\n  //           method: \"PUT\",\r\n  //           headers: {\r\n  //             \"Content-Type\": \"application/json\",\r\n  //             \"x-auth-token\": localStorage.token,\r\n  //             // Add other headers as needed\r\n  //           },\r\n  //           body: JSON.stringify(formData),\r\n  //         }\r\n  //       );\r\n  //       if (!response.ok) {\r\n  //         const data = await response;\r\n  //         console.log(data);\r\n  //         setErrorApiRequest(data.statusText);\r\n  //       }\r\n  //     } catch (error) {\r\n  //       console.error(error);\r\n  //       setErrorApiRequest(\"Internal server error\");\r\n  //     }\r\n  //     navigate(\"/calendar\");\r\n  //   },\r\n  // });\r\n\r\n  // return (\r\n  //   <div>\r\n  //     <h2>Change Password</h2>\r\n\r\n  //     <form onSubmit={form.handleSubmit}>\r\n  //       {\" \"}\r\n  //       {errorApiRequest && (\r\n  //         <div className=\"alert alert-danger\">{errorApiRequest}</div>\r\n  //       )}\r\n  //       <Input\r\n  //         {...form.getFieldProps(\"oldPassword\")}\r\n  //         type=\"password\"\r\n  //         name=\"oldPassword\"\r\n  //         id=\"oldPassword\"\r\n  //         error={form.touched.oldPassword && form.errors.oldPassword}\r\n  //       />\r\n  //       <Input\r\n  //         {...form.getFieldProps(\"newPassword\")}\r\n  //         type=\"password\"\r\n  //         name=\"newPassword\"\r\n  //         id=\"newPassword\"\r\n  //         error={form.touched.newPassword && form.errors.newPassword}\r\n  //       />\r\n  //       <Input\r\n  //         {...form.getFieldProps(\"confirmNewPassword\")}\r\n  //         type=\"password\"\r\n  //         name=\"confirmNewPassword\"\r\n  //         id=\"confirmNewPassword\"\r\n  //         error={\r\n  //           form.touched.confirmNewPassword && form.errors.confirmNewPassword\r\n  //         }\r\n  //       />{\" \"}\r\n  //       <button type=\"submit\" className=\"btn btn-primary\">\r\n  //         confirm\r\n  //       </button>\r\n  //     </form>\r\n  //   </div>\r\n  // );\r\n};\r\n\r\nexport default ChangePassword;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,kBAAkB,QAAQ,6BAA6B;AAChE,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,OAAOC,KAAK,MAAM,4BAA4B;AAC9C,OAAOC,GAAG,MAAM,KAAK;AACrB,OAAOC,cAAc,MAAM,yBAAyB;AACpD,SAASC,SAAS,QAAQ,QAAQ;AAClC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,cAAc,GAAG,MAAM;EAAA;EAAA;EAC1B,MAAMC,QAAQ,GAAGF,WAAW,EAAE;EAC/B,MAAMG,IAAI,GAAG,oBAAAD,QAAQ,CAACE,KAAK,oDAAd,gBAAgBD,IAAI,KAAI,IAAI;EACzCE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EACjB;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;AAAC,GA5FIF,cAAc;EAAA,QACAD,WAAW;AAAA;AAAA,KADzBC,cAAc;AA8FpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}