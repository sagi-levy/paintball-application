{"ast":null,"code":"import { Formik, useFormik } from \"formik\";\nimport Joi from \"joi\";\nimport FormikUsingJoi from \"../utils/formikUsingJoi\";\nimport { useState } from \"react\";\nimport PageHeader from \"./common/pageHeader\";\nimport Input from \"../components/common/input\";\nimport { updateActivityCard } from \"../services/cardsServices\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport useActivityCard from \"../hooks/useActivityCard\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditActivityCard = () => {\n  // const navigate = useNavigate();\n  // const { id } = useParams();\n  // console.log(id);\n  // const ActivityCard = useActivityCard(id);\n  // console.log(ActivityCard);\n  // useEffect(() => {\n  //   if (!ActivityCard) {\n  //     return;\n  //   }\n\n  //   /*only people who signed up as business can edit or create activities*/\n  //   const {\n  //     activityName,\n  //     activityDescription,\n  //     activityAddress,\n  //     activityDate,\n  //     bizUserPhone,\n  //     bizUserName,\n  //     activityImage,\n  //   } = ActivityCard;\n  //   form.setValues({\n  //     activityName,\n  //     activityDescription,\n  //     activityAddress,\n  //     activityDate,\n  //     bizUserPhone,\n  //     bizUserName,\n  //     activityImage,\n  //   });\n  // }, [ActivityCard]);\n  // const [errorApiRequest, setErrorApiRequest] = useState(\"\");\n\n  // const form = useFormik({\n  //   initialValues: {\n  //     activityName: \"\",\n  //     activityDescription: \"\",\n  //     activityAddress: \"\",\n  //     activityDate: \"\",\n  //     bizUserPhone: \"\",\n  //     bizUserName: \"\",\n  //     activityImage: \"\",\n  //   },\n  //   validate: FormikUsingJoi({\n  //     activityName: Joi.string().min(2).max(255).required(),\n  //     bizUserName: Joi.string().min(2).max(255).required(),\n  //     activityDescription: Joi.string().min(2).max(1024).required(),\n  //     activityAddress: Joi.string().min(2).max(400).required(),\n  //     bizUserPhone: Joi.string()\n  //       .min(9)\n  //       .max(10)\n  //       .required()\n  //       .regex(/^0[2-9]\\d{7,8}$/),\n  //     activityImage: Joi.string().min(11).max(1024),\n  //     activityDate: Joi.date(),\n  //   }),\n  //   onSubmit: async (values) => {\n  //     // console.log(\"this is values:\", values);\n  //     try {\n  //       const { activityImage, ...body } = values;\n  //       console.log(values);\n  //       if (activityImage) {\n  //         body.activityImage = activityImage;\n  //       }\n\n  //       await updateActivityCard(id, values);\n  //       navigate(\"/cards/my-activity-cards\");\n  //     } catch ({ response }) {\n  //       if (response && response.status === 400) {\n  //         setErrorApiRequest(response.data);\n  //       }\n  //     }\n  //   },\n  // });\n\n  // console.log(Object.keys(form.errors));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_c = EditActivityCard;\nexport default EditActivityCard;\nvar _c;\n$RefreshReg$(_c, \"EditActivityCard\");","map":{"version":3,"names":["Formik","useFormik","Joi","FormikUsingJoi","useState","PageHeader","Input","updateActivityCard","useNavigate","useParams","useEffect","useActivityCard","EditActivityCard"],"sources":["C:/Users/sagil/OneDrive/מסמכים/paintball-application/paintball-application/fronted/paintball-app/src/components/editActivityCard.jsx"],"sourcesContent":["import { Formik, useFormik } from \"formik\";\r\nimport Joi from \"joi\";\r\nimport FormikUsingJoi from \"../utils/formikUsingJoi\";\r\nimport { useState } from \"react\";\r\nimport PageHeader from \"./common/pageHeader\";\r\nimport Input from \"../components/common/input\";\r\nimport { updateActivityCard } from \"../services/cardsServices\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport useActivityCard from \"../hooks/useActivityCard\";\r\nconst EditActivityCard = () => {\r\n  // const navigate = useNavigate();\r\n  // const { id } = useParams();\r\n  // console.log(id);\r\n  // const ActivityCard = useActivityCard(id);\r\n  // console.log(ActivityCard);\r\n  // useEffect(() => {\r\n  //   if (!ActivityCard) {\r\n  //     return;\r\n  //   }\r\n\r\n  //   /*only people who signed up as business can edit or create activities*/\r\n  //   const {\r\n  //     activityName,\r\n  //     activityDescription,\r\n  //     activityAddress,\r\n  //     activityDate,\r\n  //     bizUserPhone,\r\n  //     bizUserName,\r\n  //     activityImage,\r\n  //   } = ActivityCard;\r\n  //   form.setValues({\r\n  //     activityName,\r\n  //     activityDescription,\r\n  //     activityAddress,\r\n  //     activityDate,\r\n  //     bizUserPhone,\r\n  //     bizUserName,\r\n  //     activityImage,\r\n  //   });\r\n  // }, [ActivityCard]);\r\n  // const [errorApiRequest, setErrorApiRequest] = useState(\"\");\r\n\r\n  // const form = useFormik({\r\n  //   initialValues: {\r\n  //     activityName: \"\",\r\n  //     activityDescription: \"\",\r\n  //     activityAddress: \"\",\r\n  //     activityDate: \"\",\r\n  //     bizUserPhone: \"\",\r\n  //     bizUserName: \"\",\r\n  //     activityImage: \"\",\r\n  //   },\r\n  //   validate: FormikUsingJoi({\r\n  //     activityName: Joi.string().min(2).max(255).required(),\r\n  //     bizUserName: Joi.string().min(2).max(255).required(),\r\n  //     activityDescription: Joi.string().min(2).max(1024).required(),\r\n  //     activityAddress: Joi.string().min(2).max(400).required(),\r\n  //     bizUserPhone: Joi.string()\r\n  //       .min(9)\r\n  //       .max(10)\r\n  //       .required()\r\n  //       .regex(/^0[2-9]\\d{7,8}$/),\r\n  //     activityImage: Joi.string().min(11).max(1024),\r\n  //     activityDate: Joi.date(),\r\n  //   }),\r\n  //   onSubmit: async (values) => {\r\n  //     // console.log(\"this is values:\", values);\r\n  //     try {\r\n  //       const { activityImage, ...body } = values;\r\n  //       console.log(values);\r\n  //       if (activityImage) {\r\n  //         body.activityImage = activityImage;\r\n  //       }\r\n\r\n  //       await updateActivityCard(id, values);\r\n  //       navigate(\"/cards/my-activity-cards\");\r\n  //     } catch ({ response }) {\r\n  //       if (response && response.status === 400) {\r\n  //         setErrorApiRequest(response.data);\r\n  //       }\r\n  //     }\r\n  //   },\r\n  // });\r\n\r\n  // console.log(Object.keys(form.errors));\r\n  return (\r\n    <>\r\n      {/* <PageHeader title={<h1>edit card page</h1>} />\r\n      <p>you can edit the card by savig the new valus</p>\r\n      <form onSubmit={form.handleSubmit}>\r\n        {errorApiRequest && (\r\n          <div className=\"alert alert-danger\">{errorApiRequest}</div>\r\n        )}\r\n        <Input\r\n          onChange={form.handleChange}\r\n          error={form.errors.activityName}\r\n          name=\"activity-name\"\r\n          type=\"text\"\r\n          id=\"activity-name\"\r\n          {...form.getFieldProps(\"activityName\")}\r\n        />\r\n        <Input\r\n          onChange={form.handleChange}\r\n          error={form.errors.activityDescription}\r\n          name=\"activity-Description\"\r\n          type=\"text\"\r\n          id=\"activity-Description\"\r\n          {...form.getFieldProps(\"activityDescription\")}\r\n        />\r\n        <Input\r\n          onChange={form.handleChange}\r\n          error={form.errors.activityDate}\r\n          name=\"activityDate\"\r\n          type=\"date\"\r\n          id=\"activityDate\"\r\n          {...form.getFieldProps(\"activityDate\")}\r\n        />\r\n        <Input\r\n          onChange={form.handleChange}\r\n          error={form.errors.activityImage}\r\n          name=\"activityImage\"\r\n          type=\"text\"\r\n          id=\"activityImage\"\r\n          {...form.getFieldProps(\"activityImage\")}\r\n        />\r\n        <Input\r\n          onChange={form.handleChange}\r\n          error={form.errors.activityAddress}\r\n          name=\"activity-Address\"\r\n          type=\"text\"\r\n          id=\"activity-Address\"\r\n          {...form.getFieldProps(\"activityAddress\")}\r\n        />\r\n        <Input\r\n          onChange={form.handleChange}\r\n          error={form.errors.bizUserName}\r\n          name=\"bizUserName\"\r\n          type=\"text\"\r\n          id=\"bizUserName\"\r\n          {...form.getFieldProps(\"bizUserName\")}\r\n        />\r\n        <Input\r\n          onChange={form.handleChange}\r\n          error={form.errors.bizUserPhone}\r\n          name=\"bizUserPhone\"\r\n          type=\"text\"\r\n          id=\"bizUserPhone\"\r\n          {...form.getFieldProps(\"bizUserPhone\")}\r\n        />\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary\"\r\n          disabled={Object.keys(form.errors).length}\r\n        >\r\n          edit card\r\n        </button>\r\n      </form> */}\r\n    </>\r\n  );\r\n};\r\nexport default EditActivityCard;\r\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,SAAS,QAAQ,QAAQ;AAC1C,OAAOC,GAAG,MAAM,KAAK;AACrB,OAAOC,cAAc,MAAM,yBAAyB;AACpD,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,KAAK,MAAM,4BAA4B;AAC9C,SAASC,kBAAkB,QAAQ,2BAA2B;AAC9D,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,eAAe,MAAM,0BAA0B;AAAC;AAAA;AACvD,MAAMC,gBAAgB,GAAG,MAAM;EAC7B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,oBACE,qCAwEG;AAEP,CAAC;AAAC,KAvJIA,gBAAgB;AAwJtB,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}