{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sagil\\\\OneDrive\\\\\\u05DE\\u05E1\\u05DE\\u05DB\\u05D9\\u05DD\\\\paintball-application\\\\paintball-application\\\\fronted\\\\paintball-app\\\\src\\\\components\\\\emailSentPass.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../context/auth.context\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SentEmail = () => {\n  _s();\n  const {\n    logIn,\n    user,\n    refreshUser\n  } = useAuth();\n  const TOKEN_KEY = \"token\";\n  const [errorApiRequest, setErrorApiRequest] = useState(\"\");\n  const [timer, setTimer] = useState(10); // Initial timer value in seconds\n  const [verificationCode, setVerificationCode] = useState(\"\");\n  const [isTimerActive, setIsTimerActive] = useState(true);\n  const navigate = useNavigate();\n  const startTimer = () => {\n    // Set a timer to decrement the timer value every second\n    const intervalId = setInterval(() => {\n      setTimer(prevTimer => {\n        if (prevTimer === 0) {\n          // Clear the interval when the timer reaches 0\n          clearInterval(intervalId);\n          setIsTimerActive(false); // Set the timer as inactive\n          return 0; // Set timer to 0 and prevent it from restarting\n        } else {\n          return prevTimer - 1;\n        }\n      });\n    }, 1000);\n    return intervalId; // Return the intervalId for cleanup\n  };\n\n  useEffect(() => {\n    if (isTimerActive) {\n      const intervalId = startTimer();\n\n      // Cleanup: Reset the timer and clear the interval when the component unmounts\n      return () => {\n        clearInterval(intervalId);\n      };\n    }\n  }, [isTimerActive]);\n  const handleVerificationCodeChange = e => {\n    const inputCode = e.target.value;\n    setVerificationCode(inputCode);\n  };\n  const handleVerificationCodeSubmit = async () => {\n    // Check if the entered code is valid\n    const isValidCode = verificationCode.length === 4;\n    if (isValidCode && isTimerActive) {\n      // Your existing code for submitting the verification code\n\n      // Start the timer after successful verification\n      setIsTimerActive(true); // Set the timer as active\n    } else {\n      console.error(\"Invalid verification code\");\n    }\n  };\n  const sendAnotherCode = () => {\n    const fetchForCode = async () => {\n      try {\n        // Add your backend API endpoint for password reset\n        const response = await fetch(\"http://localhost:3003/reset-password\", {\n          method: \"POST\"\n          // headers: {\n          //   'Content-Type': 'application/json',\n          // },\n          // body: JSON.stringify({ email, phoneNumber }),\n        });\n\n        const data = await response.json();\n        if (response.ok) {\n          console.log(\"message\");\n        } else {}\n      } catch (error) {\n        console.error(\"Error resetting password:\", error.message);\n      }\n    };\n    fetchForCode(); // Immediately send a new code\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enter Verification Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter the 4-digit verification code sent to your email.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: verificationCode,\n      onChange: handleVerificationCodeChange,\n      maxLength: 4\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleVerificationCodeSubmit,\n      children: \"Submit Verification Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-danger\",\n        children: errorApiRequest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Time remaining: \", Math.floor(timer / 60), \":\", timer % 60]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), timer === 0 && isTimerActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendAnotherCode,\n        children: \"Send New Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(SentEmail, \"wwuu5ph2rGJVskm5902D0h/TemU=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = SentEmail;\nexport default SentEmail;\nvar _c;\n$RefreshReg$(_c, \"SentEmail\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useAuth","toast","SentEmail","logIn","user","refreshUser","TOKEN_KEY","errorApiRequest","setErrorApiRequest","timer","setTimer","verificationCode","setVerificationCode","isTimerActive","setIsTimerActive","navigate","startTimer","intervalId","setInterval","prevTimer","clearInterval","handleVerificationCodeChange","e","inputCode","target","value","handleVerificationCodeSubmit","isValidCode","length","console","error","sendAnotherCode","fetchForCode","response","fetch","method","data","json","ok","log","message","Math","floor"],"sources":["C:/Users/sagil/OneDrive/מסמכים/paintball-application/paintball-application/fronted/paintball-app/src/components/emailSentPass.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../context/auth.context\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst SentEmail = () => {\r\n  const { logIn, user, refreshUser } = useAuth();\r\n  const TOKEN_KEY = \"token\";\r\n  const [errorApiRequest, setErrorApiRequest] = useState(\"\");\r\n  const [timer, setTimer] = useState(10); // Initial timer value in seconds\r\n  const [verificationCode, setVerificationCode] = useState(\"\");\r\n  const [isTimerActive, setIsTimerActive] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  const startTimer = () => {\r\n    // Set a timer to decrement the timer value every second\r\n    const intervalId = setInterval(() => {\r\n      setTimer((prevTimer) => {\r\n        if (prevTimer === 0) {\r\n          // Clear the interval when the timer reaches 0\r\n          clearInterval(intervalId);\r\n          setIsTimerActive(false); // Set the timer as inactive\r\n          return 0; // Set timer to 0 and prevent it from restarting\r\n        } else {\r\n          return prevTimer - 1;\r\n        }\r\n      });\r\n    }, 1000);\r\n\r\n    return intervalId; // Return the intervalId for cleanup\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isTimerActive) {\r\n      const intervalId = startTimer();\r\n\r\n      // Cleanup: Reset the timer and clear the interval when the component unmounts\r\n      return () => {\r\n        clearInterval(intervalId);\r\n      };\r\n    }\r\n  }, [isTimerActive]);\r\n\r\n  const handleVerificationCodeChange = (e) => {\r\n    const inputCode = e.target.value;\r\n    setVerificationCode(inputCode);\r\n  };\r\n\r\n  const handleVerificationCodeSubmit = async () => {\r\n    // Check if the entered code is valid\r\n    const isValidCode = verificationCode.length === 4;\r\n\r\n    if (isValidCode && isTimerActive) {\r\n      // Your existing code for submitting the verification code\r\n\r\n      // Start the timer after successful verification\r\n      setIsTimerActive(true); // Set the timer as active\r\n    } else {\r\n      console.error(\"Invalid verification code\");\r\n    }\r\n  };\r\n\r\n  const sendAnotherCode = () => {\r\n    const fetchForCode = async () => {\r\n      try {\r\n        // Add your backend API endpoint for password reset\r\n        const response = await fetch(\"http://localhost:3003/reset-password\", {\r\n          method: \"POST\",\r\n          // headers: {\r\n          //   'Content-Type': 'application/json',\r\n          // },\r\n          // body: JSON.stringify({ email, phoneNumber }),\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (response.ok) {\r\n          console.log(\"message\");\r\n        } else {\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error resetting password:\", error.message);\r\n      }\r\n    };\r\n\r\n    fetchForCode(); // Immediately send a new code\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Enter Verification Code</h2>\r\n      <p>Please enter the 4-digit verification code sent to your email.</p>\r\n\r\n      <input\r\n        type=\"text\"\r\n        value={verificationCode}\r\n        onChange={handleVerificationCodeChange}\r\n        maxLength={4}\r\n      />\r\n\r\n      <button onClick={handleVerificationCodeSubmit}>\r\n        Submit Verification Code\r\n      </button>\r\n\r\n      <div>\r\n        <p className=\"text-danger\">{errorApiRequest}</p>\r\n      </div>\r\n\r\n      <div>\r\n        <p>\r\n          Time remaining: {Math.floor(timer / 60)}:{timer % 60}\r\n        </p>\r\n        {timer === 0 && isTimerActive ? (\r\n          <button onClick={sendAnotherCode}>Send New Code</button>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SentEmail;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}